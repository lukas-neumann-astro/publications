###############################
#   PyStacker Config File   #
###############################


####################################
# Step 1: Define Path              #
####################################
# <filename of geometry file>
# Specify the directories:
wd = '/Users/lneumann/Documents/PhD/Scripts/Papers/Dense_gas_letter/'
final_direc = wd + 'data/stacks/'
data_direc = wd + 'data/pystruct/'


# As an example, we will use the database of the galaxy NGC 5194. We have only one galaxy.
# If you have more, you can expand the list accordingly
fnames = [
        'ngc0628_data_struct_18.6as_almond.npy',
        # 'ngc1097_data_struct_19.4as_almond.npy',  # trim_stackspec = False, uncomment as needed
        'ngc1365_data_struct_20.6as_almond.npy', 
        'ngc1385_data_struct_19.9as_almond.npy',
        'ngc1511_data_struct_17.6as_almond.npy',
        'ngc1546_data_struct_18.9as_almond.npy',
        'ngc1566_data_struct_19.7as_almond.npy',
        'ngc1672_data_struct_18.2as_almond.npy', 
        'ngc1792_data_struct_18.7as_almond.npy',
        'ngc2566_data_struct_18.5as_almond.npy', 
        'ngc2903_data_struct_18.3as_almond.npy',
        'ngc2997_data_struct_20.4as_almond.npy',
        'ngc3059_data_struct_16.7as_almond.npy', 
        'ngc3521_data_struct_21.1as_almond.npy',
        'ngc3621_data_struct_18.9as_almond.npy', 
        'ngc4303_data_struct_20.2as_almond.npy', 
        'ngc4321_data_struct_19.6as_almond.npy',
        'ngc4535_data_struct_22.8as_almond.npy',
        'ngc4536_data_struct_21.5as_almond.npy',
        'ngc4569_data_struct_19.2as_almond.npy',
        'ngc4826_data_struct_18.7as_almond.npy',
        'ngc5248_data_struct_19.9as_almond.npy',
        'ngc5643_data_struct_18.0as_almond.npy',
        'ngc6300_data_struct_17.7as_almond.npy',
        'ngc7496_data_struct_17.9as_almond.npy',
    
        'ngc0628_data_struct_33.3as_empire.npy',
        'ngc2903_data_struct_33.3as_empire.npy',
        'ngc3184_data_struct_33.3as_empire.npy',
        'ngc3627_data_struct_33.3as_empire.npy',
        'ngc4254_data_struct_33.3as_empire.npy',
        'ngc4321_data_struct_33.3as_empire.npy',
        'ngc5055_data_struct_33.3as_empire.npy',
        'ngc5194_data_struct_33.3as_empire.npy',
        'ngc6946_data_struct_33.3as_empire.npy',
         ]

# We will only stack by radius for now.
xtypes = 'INT_VAL_SD_STAR'

#Lines
lines = ['CO21', 'HCN10', 'HCOP10']
prior = ['CO10']

####################################
# Step 2: Optional                 #
####################################
#Optional
xmin = 3e1
nbins = 10
bin_scaling = 'log'  # 'linear' or 'log'

# weighted stacks
weights_type = None

# S/N thresholds for lower and upper mask DEFAULT: [2,4]
sn_limits = [2,4] 

# window size over which to integrate for limit in case no detection is found. In km/s DEFAULT: 30
no_detec_wdw = 100

# window size where emission is expected to exlude from finding the mask. In km/s DEAFULT:0
line_wdw = 100

# in km/s range at either edges to exclude from integrating or finding the mask. DEAFULT: 100
pad_v = 0

# How to measure the line rms can be 'iterative' or None (DEFAULT)
# rms_type = 'iterative'

#trim edges of spectrum to ensure overlap over all the spectra that are stacked
trim_stackspec = True
# trim_stackspec = False  # uncomment as needed
